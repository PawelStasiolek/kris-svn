//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1882
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.1882 版自动生成。
// 
namespace PDAClient.PDAWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PDAServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PDAService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public PDAService() {
            this.Url = "http://localhost:58220/webservice/PDAService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PDALogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PDALogin(string loginName, string pwd, out string errorMessage, out string userName) {
            object[] results = this.Invoke("PDALogin", new object[] {
                        loginName,
                        pwd});
            errorMessage = ((string)(results[1]));
            userName = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPDALogin(string loginName, string pwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PDALogin", new object[] {
                        loginName,
                        pwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPDALogin(System.IAsyncResult asyncResult, out string errorMessage, out string userName) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            userName = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Inventory_Check", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Inventory_Check(string product, string pallet, string user, out string errorMessage) {
            object[] results = this.Invoke("Inventory_Check", new object[] {
                        product,
                        pallet,
                        user});
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInventory_Check(string product, string pallet, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Inventory_Check", new object[] {
                        product,
                        pallet,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInventory_Check(System.IAsyncResult asyncResult, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockIn(string orderNo, string product, string pallet, string user, out string errorMessage) {
            object[] results = this.Invoke("StockIn", new object[] {
                        orderNo,
                        product,
                        pallet,
                        user});
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStockIn(string orderNo, string product, string pallet, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StockIn", new object[] {
                        orderNo,
                        product,
                        pallet,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndStockIn(System.IAsyncResult asyncResult, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBarcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertBarcode(System.Data.DataTable dtBarcode, string containerCode, string user, out string errorMessage) {
            object[] results = this.Invoke("InsertBarcode", new object[] {
                        dtBarcode,
                        containerCode,
                        user});
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertBarcode(System.Data.DataTable dtBarcode, string containerCode, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertBarcode", new object[] {
                        dtBarcode,
                        containerCode,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertBarcode(System.IAsyncResult asyncResult, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeliverCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeliverCheck(string containerCode, string barCode) {
            object[] results = this.Invoke("DeliverCheck", new object[] {
                        containerCode,
                        barCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeliverCheck(string containerCode, string barCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeliverCheck", new object[] {
                        containerCode,
                        barCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeliverCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
}
